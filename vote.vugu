<div>
    <h2 vg-html="c.app.Topic" class=""></h2>
    <ul class="list-group">
        <li class="list-group-item list-group-item-action disabled"
            vg-if="value.Status"
            vg-for="c.Users()">
                <span :class='"name"+c.UserStyle(value)' vg-html="value.Name"></span>
                <span class="vote" vg-html="value.Vote"></span>
        </li>
    </ul>
    <div class="btn-group" role="group" aria-label="Vote">
        <button type="button" class="btn btn-secondary votebtn"
            @click="c.vote = value"
            vg-for="votes"
            vg-html=value></button>
    </div>
    <p></p>
    <a class="btn btn-success btn-lg"
        href="#"
        role="button"
        @click='c.CastVote()'>
        Cast Vote
    </a>
</div>

<style>
.name {
    font-size: 1.6em;
    height: 2em;
    width: 80%;
}
.vote {
    font-size: 2em;
    height: 2em;
    padding-left: 4em;
}
.votebtn {
    font-size: 1.8em;
}
</style>

<script type="application/x-go">
var votes = []string{"XS","S","S-M","M","M-L","L","XL"}
type Vote struct {
    app  *Poker
    vote string
}

func (c *Vote) Users() []*User {
    return c.app.Users
}

func (c *Vote) UserStyle(user *User) string {
    if user == c.app.loginUser {
        return " text-info"
    }
    if user.Vote == "" {
        return " text-warning"
    }
    return " text-success"
}

func (c *Vote) CastVote() {
    c.app.CastVote(c.vote)
}
</script>